#!/usr/bin/env python
# coding: utf-8

# # List [Exercises]

# In[ ]:


# Datasets

year2014 = ('10/04/2014','16/04/2014','09/05/2014','24/05/2014','13/06/2014','16/06/2014','12/07/2014','10/08/2014',
            '16/08/2014','18/08/2014','09/09/2014','12/09/2014','30/09/2014','09/10/2014','10/10/2014','31/10/2014',
            '09/11/2014','11/11/2014','30/11/2014','09/12/2014','31/12/2014')

year2015 = ('09/01/2015','09/02/2015','28/02/2015','09/03/2015','09/04/2015','10/04/2015','30/04/2015','09/05/2015',
            '31/05/2015','09/06/2015','30/06/2015','12/07/2015','31/07/2015','09/08/2015','31/08/2015','09/09/2015',
            '10/09/2015','10/09/2015','30/09/2015','09/10/2015','31/10/2015','10/11/2015','13/11/2015','30/11/2015',
            '09/12/2015','10/12/2015','31/12/2015')

year2016 = ('09/01/2016','10/01/2016','31/01/2016','31/01/2016','09/02/2016','10/02/2016','29/02/2016','09/03/2016',
            '10/03/2016','10/03/2016','10/03/2016','31/03/2016','31/03/2016','05/04/2016','09/04/2016','10/04/2016',
            '12/04/2016','30/04/2016','06/05/2016','06/05/2016','09/05/2016','12/05/2016','12/05/2016','19/05/2016',
            '19/05/2016','21/05/2016','23/05/2016','31/05/2016','31/05/2016','01/06/2016','03/06/2016','03/06/2016',
            '04/06/2016','04/06/2016','04/06/2016','08/06/2016','24/06/2016','24/06/2016','03/07/2016','03/07/2016',
            '04/07/2016','09/07/2016','11/07/2016','11/07/2016','11/07/2016','12/07/2016','12/07/2016','13/07/2016',
            '15/07/2016','04/08/2016','04/08/2016','04/08/2016','09/08/2016','11/08/2016','13/08/2016','31/08/2016',
            '31/08/2016','03/09/2016','04/09/2016','04/09/2016','26/09/2016','26/09/2016','26/09/2016','30/09/2016',
            '05/10/2016','07/10/2016','07/10/2016','12/10/2016','27/10/2016','01/11/2016','02/11/2016','07/11/2016',
            '12/11/2016','16/11/2016','16/11/2016','05/12/2016','07/12/2016','09/12/2016','12/12/2016','15/12/2016')

year2017 = ('01/01/2017','02/01/2017','05/01/2017','07/01/2017','07/01/2017','08/01/2017','15/01/2017','04/02/2017',
            '09/02/2017','09/02/2017','14/02/2017','01/03/2017','16/03/2017','06/05/2017','13/05/2017','05/06/2017')

year2018 = ('24/02/2018','26/03/2018','25/04/2018','15/12/2018')

year2019 = ('15/01/2019','15/01/2019','24/01/2019','25/01/2019','25/01/2019','25/01/2019','26/01/2019','26/01/2019',
            '28/01/2019','28/01/2019','29/01/2019','31/01/2019','05/02/2019','13/02/2019','15/02/2019','20/02/2019',
            '28/02/2019','15/03/2019','20/03/2019','26/03/2019','29/03/2019','02/04/2019','02/04/2019','05/04/2019',
            '05/04/2019','05/04/2019','09/04/2019','10/04/2019','11/04/2019','13/04/2019','13/04/2019','22/04/2019',
            '28/04/2019','29/04/2019','30/04/2019','02/05/2019','08/05/2019','09/05/2019','10/05/2019','10/05/2019',
            '11/05/2019','15/05/2019','17/05/2019','20/05/2019','22/05/2019','28/05/2019','30/05/2019','30/05/2019',
            '30/05/2019','31/05/2019','05/06/2019','05/06/2019','07/06/2019','08/06/2019','12/06/2019','13/06/2019',
            '14/06/2019','15/06/2019','16/06/2019','18/06/2019','30/06/2019','05/07/2019','17/07/2019','30/07/2019',
            '31/07/2019','05/08/2019','14/08/2019','15/08/2019','16/08/2019','30/08/2019','05/09/2019','12/09/2019',
            '15/09/2019','16/09/2019','16/09/2019','20/09/2019','26/09/2019','30/09/2019','30/09/2019','05/10/2019',
            '20/10/2019','30/10/2019','15/11/2019','30/11/2019','06/12/2019','16/12/2019','31/12/2019')


# ### 1. Print structures type

# ### 2. Convert the structures to list ("rename: y2011")

# ### 3. check new and old structures

# ### 4. Create single document (call "years")

# ### 5. Count number of occurrences of 2017 in years

# ### 6. Calculate the relative frequency for 2017

# ### 7. Calculate the relative frequency for months (%)

# ### 8. Check if months relative frequency (sum) is 100%

# ### 9. Calculate the relative frequency for days(%)

# ### 10. Check if days relative frequency (sum) is 100%

# ### 11. Sorting #10 (days frequency)

# ### 12. Most frequency day

# In[ ]:




